------------ Forward Traversal, Calculating answer before push -----------------------

vector<int> leftSmaller(int n, int a[]){
        
        vector<int> ans(n);
        
        stack <int> s;
        
        for(int i = 0; i<n; i++) {
            while(!s.empty() && a[s.top()] >= a[i]) {
                s.pop();
            }
            ans[i] = s.empty() ? -1 : a[s.top()];
            s.push(i);
        }
        
        return ans;
        
    }
    
    
    ------------ Backward Traversal, Calculating answer during pop -----------------------
    
    vector<int> leftSmaller(int n, int a[]){
        
        vector<int> ans(n);
        
        stack <int> s;
        
        for(int i = n-1; i>=0; i--) {
            while(!s.empty() && a[s.top()] > a[i]) {
                ans[s.top()] = a[i];
                s.pop();
            }
            s.push(i);
        }
        
        while (!s.empty()) {
            ans[s.top()] = -1;
            s.pop();
        }
        
        return ans;
        
    }
